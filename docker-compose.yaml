services:
  
  backend:
    image: pkemkes/gist-backend
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
      chromadb:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      loki:
        condition: service_started
    environment:
      - CORS_ALLOWED_ORIGIN=http://localhost:5173  # NOTE: Change this to your frontend's base URL
      - EmbeddingClientHandlerOptions__ApiKey=${OPENAI_API_KEY}
      - EmbeddingClientHandlerOptions__ProjectId=${OPENAI_PROJECT_KEY}
      - ChatClientHandlerOptions__ApiKey=${OPENAI_API_KEY}
      - ChatClientHandlerOptions__ProjectId=${OPENAI_PROJECT_KEY}
      - ChromaDbHandlerOptions__Server=chromadb
      - ChromaDbHandlerOptions__ServerAuthnCredentials=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - CustomSearchApiHandlerOptions__ApiKey=${GOOGLE_API_KEY}
      - CustomSearchApiHandlerOptions__EngineId=${GOOGLE_SEARCH_ENGINE_ID}
      - TelegramBotClientHandlerOptions__BotToken=${TELEGRAM_API_KEY}
      - TelegramServiceOptions__AppBaseUrl=http://localhost:8081  # NOTE: Change this to your base URL
      - GistMariaDbHandlerOptions__Server=database
      - GistMariaDbHandlerOptions__User=${DB_GISTSERVICE_USERNAME}
      - GistMariaDbHandlerOptions__Password=${DB_GISTSERVICE_PASSWORD}
      - RecapMariaDbHandlerOptions__Server=database
      - RecapMariaDbHandlerOptions__User=${DB_RECAPSERVICE_USERNAME}
      - RecapMariaDbHandlerOptions__Password=${DB_RECAPSERVICE_PASSWORD}
      - CleanupMariaDbHandlerOptions__Server=database
      - CleanupMariaDbHandlerOptions__User=${DB_CLEANUPSERVICE_USERNAME}
      - CleanupMariaDbHandlerOptions__Password=${DB_CLEANUPSERVICE_PASSWORD}
      - TelegramMariaDbHandlerOptions__Server=database
      - TelegramMariaDbHandlerOptions__User=${DB_TELEGRAMSERVICE_USERNAME}
      - TelegramMariaDbHandlerOptions__Password=${DB_TELEGRAMSERVICE_PASSWORD}
      - GistsControllerMariaDbHandlerOptions__Server=database
      - GistsControllerMariaDbHandlerOptions__User=${DB_GISTSCONTROLLER_USERNAME}
      - GistsControllerMariaDbHandlerOptions__Password=${DB_GISTSCONTROLLER_PASSWORD}
    networks:
      - database
      - chromadb
      - monitoring
    ports:
      - "8080:8080"

  frontend:
    image: pkemkes/the-gist-of-it-sec-frontend
    container_name: frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      VITE_BACKEND_URL: http://localhost:8080/  # NOTE: Change this to your base URL
      # NOTE: either remove or update the following three variables
      VITE_TELEGRAM_URL: https://url-to-your-telegram-bot.this-is-not-a-real-url/ 
      VITE_METRICS_URL: https://url-to-your-metrics-dashboard.this-is-not-a-real-url/ 
      VITE_PRIVACY_URL: https://url-to-your-privacy-notice.this-is-not-a-real-url/
      VITE_IMPRINT_URL: https://url-to-your-imprint.this-is-not-a-real-url/
    ports:
      - "8081:80"

  database:
    image: pkemkes/the-gist-of-it-sec-database
    container_name: database
    logging:
      options:
        max-size: 1g
    environment:
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_GISTSERVICE_USERNAME=${DB_GISTSERVICE_USERNAME}
      - DB_GISTSERVICE_PASSWORD=${DB_GISTSERVICE_PASSWORD}
      - DB_RECAPSERVICE_USERNAME=${DB_RECAPSERVICE_USERNAME}
      - DB_RECAPSERVICE_PASSWORD=${DB_RECAPSERVICE_PASSWORD}
      - DB_GISTSCONTROLLER_USERNAME=${DB_GISTSCONTROLLER_USERNAME}
      - DB_GISTSCONTROLLER_PASSWORD=${DB_GISTSCONTROLLER_PASSWORD}
      - DB_TELEGRAMSERVICE_USERNAME=${DB_TELEGRAMSERVICE_USERNAME}
      - DB_TELEGRAMSERVICE_PASSWORD=${DB_TELEGRAMSERVICE_PASSWORD}
      - DB_CLEANUPSERVICE_USERNAME=${DB_CLEANUPSERVICE_USERNAME}
      - DB_CLEANUPSERVICE_PASSWORD=${DB_CLEANUPSERVICE_PASSWORD}
      - DB_GRAFANA_USERNAME=${DB_GRAFANA_USERNAME}
      - DB_GRAFANA_PASSWORD=${DB_GRAFANA_PASSWORD}
    volumes:
      - database-data:/var/lib/mysql
    networks:
      - database
  
  chromadb:
    image: pkemkes/the-gist-of-it-sec-chromadb
    container_name: chromadb
    logging:
      options:
        max-size: 1g
    environment:
      - IS_PERSISTENT=TRUE
      - CHROMA_SERVER_AUTHN_CREDENTIALS=${CHROMA_SERVER_AUTHN_CREDENTIALS}
      - PERSIST_DIRECTORY=/chroma/chroma
    volumes:
      - chromadb-data:/chroma/chroma
    networks:
      - chromadb
  
  prometheus:
    image: pkemkes/the-gist-of-it-sec-prometheus
    container_name: prometheus
    logging:
      options:
        max-size: 1g
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
  
  loki:
    image: grafana/loki:3.5.3
    container_name: loki
    logging:
      options:
        max-size: 1g
    volumes:
      - loki-data:/loki
      - ./loki/loki.yml:/etc/loki/local-config.yaml
    networks:
      - monitoring
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  
  promtail:
    image: grafana/promtail:3.5.3
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      loki:
        condition: service_started
    networks:
      - monitoring

  grafana:
    image: pkemkes/the-gist-of-it-sec-grafana
    container_name: grafana
    logging:
      options:
        max-size: 1g
    environment:
      - DB_GRAFANA_USERNAME=${DB_GRAFANA_USERNAME}
      - DB_GRAFANA_PASSWORD=${DB_GRAFANA_PASSWORD}
      - PROMETHEUS_URL=http://prometheus:9090
      - DATABASE_HOST_AND_PORT=database:3306
      - LOKI_URL=http://loki:3100
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
      loki:
        condition: service_started
    networks:
      - monitoring
      - database
    ports:
      - 3000:3000

networks:
  database:
  chromadb:
  monitoring:

volumes:
  database-data:
    driver: local
  chromadb-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
